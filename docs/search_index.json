[
["index.html", "STA 141 - Exploratory Data Analysis and Visualization Preface 0.1 Instructional Material 0.2 Data Sources 0.3 Introduction 0.4 Pedigogical Plan", " STA 141 - Exploratory Data Analysis and Visualization Derek L. Sonderegger January 30, 2020 Preface These are the lecture notes for STA 141 - Exploratory Visual Data Analysis. This course is intended to teach students how to think critically about problems, examine data that can provide answers, and create graphs that are insightful, and ask follow-up questions to the visual analysis. Also, because disinformation can be disguised to seem credible, students will also be exposed to various data visualization tricks and statistical malarkey that propagandists. The source code for my notes, homework assignments, and other information is available on my on GitHub. In particular, there is a directory data-raw that contains all of the datasets that we’ll use in these notes and homeworks. 0.1 Instructional Material This course draws information from several websites and books. Alberto Cairo’s book The Truthful Art. Alberto Cairo is the Knight Chair in Visual Journalism at the School of Communication of the University of Miami (UM), where he heads specializations in infographics and data visualization. You can find more about him at thefunctionalart.com. Also at his website, his blog highlights data visualizations in the news. Many of the graphs I will shown in this class are featured here. Claus O. Wilke has a book Fundamentals of Data Visualization. There is an online pre-print version of the book available here as well as GitHub repositories for the book source and data used in the book. He also has a nice R package called cowplot that aids in making publication ready graphs using R’s ggplot2. Calling Bullshit This is a 3-credit course taught at University of Washington. Their goal is to teach students to recognize bullshit provide another scientist a reason why a claim is bullshit. Amelia McNamara’s SDS 136 course. Amelia is an Assistant Professor at University of St Thomas and I’ve been influenced by her presentations at national conferences. These are her notes from a data visualization course that she teaches. She is also pretty fun to follow on twitter. 0.2 Data Sources The website Our World in Data has tried to bring together huge amounts of information about a variety of topics and presents the data in context. It typically addresses socioeconomic issues. The website Kaggle started out as a repository for data sets in which data scientists would have host informal competitions. It has grown to host thousands of data sets covering a wide variety of issues. The Gapminder website has health and socioeconomic data for counties going back in time. Access data from the US Government from Data.gov The Centers for Disease Control Vital Stats allows for direct download of commonly used downloads. The CDC’s Wonder on-line access allows you to format data requests for a wide variety of scenarios. 0.3 Introduction Why visualize data? See relationships that raw data obscure. Cognitive work to translate raw numbers into context between other data points are already done for you. Good graphics translate particular numerical relationships into physical relationships which our brains are really good at processing. UK Drug Poison These are the data from the UK related to drug overdose and misuse. Farther down the page gives a similar graph on suicide. Migration Patterns in Europe. While the New York Times is generally really quite good, this graph is quite misleading. Another view of the data is more fair, although the still depressing. I feel compelled to show a bad 3-d Excel graphic as well. Reuter’s infamous gun deaths in Florida chart. 0.4 Pedigogical Plan Develop basic understanding and skills about data wrangling. Because this course will require you to find data that interests you, we need to also learn how to manipulate it because the data are never in a nice format. Introduce the Elementary Perceptual Task order and understand how certain visual tasks are more accurate than others. Introduce a slew of graphic types and examples of where and how they are commonly used. Investigate the choice of variables to display and how that can influence the graph interpretation. Understand how interactive graphics can be used across a broad audience. "],
["1-data-wrangling.html", "Chapter 1 Data Wrangling 1.1 Introduction 1.2 Tableau 1.3 Importing data 1.4 Tidying or Reshaping 1.5 Exercises", " Chapter 1 Data Wrangling 1.1 Introduction The process of data wrangling often seems very situation dependent and there isn’t a unifying process. However this isn’t completely true. The process can be thought of as having four distinct steps. Step Description Import Get the data into software somehow. The structure of the data is just however it came in. Tidy Restructure the data so that each row is an observation, and each column is a variable. Clean Correct variable types, consistent and useful labels, validation and correction. Use Sub-setting the full data into a smaller set that addresses a particular question. In many real world examples, the data wrangling work is concentrated in only one first three steps. Typically you might be able to skip one or more steps, but pedagogically it is helpful to 1.1.1 Tidying The terminology of “tidy data” popularized by Hadley Wickham and his introduction to the concept lives in a vignette in the R tidyr package. I highly recommend reading Hadley Wickhams’s introduction as well as what I present here. Data is usually described as “tidy” if it satisfies the following: Each row represents an observation. Each column represents a variable. Each table of data represents a different type of observational unit. The difficult part is recognizing what constitutes an observation and what constitutes a variable. Often I like to think that the observations represent a noun and each now has multiple variables that adjectives that describe the noun. In particular I think that the attributes should be applicable to every single observation. If your data has a large number of NA values, that is a symptom of storing the data in a messy (non-tidy) format. Suppose I have an address book where I keep email addresses, phone numbers, and other contact information. However, because different people have several different types of contact information, it would be a bad idea to have one row per person because then we’d need a column for work email, personal email, home phone, work phone, cell phone, twitter handle, reddit user name, etc. Instead, store the information with a single row representing a particular contact. ## # A tibble: 5 x 3 ## Person Type Value ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 Derek Work Email derek.sonderegger@nau.edu ## 2 Derek Cell Phone 970-867-5309 ## 3 Derek Twitter @D_Sonderegger ## 4 Derek Github dereksonderegger ## 5 Mom Home Phone 555-867-5309 For a more challenging example, suppose we have grade book where we’ve stored students scores for four different homework assignments. ## name HW.1 HW.2 HW.3 HW.4 ## 1 Alison 8 5 8 4 ## 2 Brandon 5 3 6 9 ## 3 Charles 9 7 9 10 In this case we are considering each row to represent a student and each variable represents homework score. An alternative representation would be for each row to represent a single score. ## name Assignment Score ## 1 Alison HW.1 8 ## 2 Brandon HW.1 5 ## 3 Charles HW.1 9 ## 4 Alison HW.2 5 ## 5 Brandon HW.2 3 ## 6 Charles HW.2 7 ## 7 Alison HW.3 8 ## 8 Brandon HW.3 6 ## 9 Charles HW.3 9 ## 10 Alison HW.4 4 ## 11 Brandon HW.4 9 ## 12 Charles HW.4 10 Either representation is fine in this case, because each student should have the same number of assignments. However, if I was combining grade books from multiple times I’ve taught the course, the first option won’t work because sometimes I assign projects and sometimes not. So the tidy version of the data would be to have a table scores where each row represents a single assignment from a particular student. 1.1.2 Cleaning The cleaning step is usually highly dependent on the data set content. This step involves Making sure every variable has the right type. For example, make sure that dates are dates, not character strings. Fix factor labels and sort order. Verify numeric values are reasonable. Create (some) calculated variables Most of our data frame manipulation tools are designed to work with tidy data. As a result, cleaning is most easily done after the data set structure has been tidied. Therefore,I recommend first performing the reshaping tidying step and then perform the cleaning. 1.1.3 Use In this step, we concentrate on the research question of interest. Often this involves calculating summary statistics, calculating selecting only particular rows of data, and finally creating graphs and models. 1.2 Tableau Tableau comes with two pieces of software, Tableau Prep and Tableau. The prep software is intended to support the data tidying, cleaning, and summarization steps. Then we save the result to a file and open the cleaned up data in Tableau to do the visualization. This course has access to both Tableau and Tableau Prep through an academic license. Go to https://www.tableau.com/products/prep/download to download both products. Select each product download link to get started. When prompted, enter your school email address for Business E-mail and enter the name of your school for Organization. Activate with your product key which will be distributed via email or on Bblearn. This license will work through the semester. You may continue using Tableau after the class is over by individually requesting their own one-year license through the Tableau for Students program. 1.3 Importing data Often data will be stored in a Comma Separated Values file that has a .csv file suffix. These types of files store data tables, and use a comma to separate the columns. Spreadsheet programs will recognize these files and show columns for Student Name, Exam 1, Exam 2 and the Final Exam. However, if you open these files using a text reader program, they’ll look something like this: Student Name,Exam 1,Exam 2,Final Exam Alice,87,87,81 Bob,91,88,85 Charlie,88,79,92 Below is a video showing how to open up this same data in Tableau Prep. The import step gives a rotated view of the data and generally that doesn’t bother me, but for purposes of show what the imported data looks like, we’ll add a cleaning step that doesn’t do anything but will show the data. In general I won’t keep this step in my cleaning workflow, but it is handy to know how to do this. 1.4 Tidying or Reshaping Often source data is stored in a structure that isn’t useful for subsequent analysis. When the data isn’t a format of one observation per row and one variable per column, we need to fix those issues before proceeding. 1.4.1 Gather When data is in the “wide” format, we might need to convert it into “long” format. For an example, suppose we have a gradebook with a few students. grade.book &lt;- rbind( tibble(Name=&#39;Alison&#39;, `Exam 1`=87, `Exam 2`=87, `Final Exam`=81), tibble(Name=&#39;Bob&#39;, `Exam 1`=91, `Exam 2`=88, `Final Exam`=85), tibble(Name=&#39;Charlie&#39;,`Exam 1`=88, `Exam 2`=79, `Final Exam`=92)) grade.book ## # A tibble: 3 x 4 ## Name `Exam 1` `Exam 2` `Final Exam` ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 Alison 87 87 81 ## 2 Bob 91 88 85 ## 3 Charlie 88 79 92 What we want to do is turn this data frame from a wide data frame into a long data frame. In MS Excel and Tableau, this is called pivoting. Essentially I’d like to create a data frame with three columns: Name, Assessment, and Score. That is to say that each homework datum really has three pieces of information: who it came from, which homework it was, and what the score was. It doesn’t conceptually matter if I store it as 3 rows of 4 columns or 12 rows so long as there is a way to identify how a student scored on a particular homework. So we want to reshape the three Exam columns into just two columns (Assessment and Score). # first we gather the score columns into columns we&#39;ll name Homework and Score tidy.scores &lt;- grade.book %&gt;% gather( key=Assessment, # What should I call the key column value=Score, # What should I call the values column `Exam 1`:`Final Exam`) # which columns to apply this to tidy.scores ## # A tibble: 9 x 3 ## Name Assessment Score ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 Alison Exam 1 87 ## 2 Bob Exam 1 91 ## 3 Charlie Exam 1 88 ## 4 Alison Exam 2 87 ## 5 Bob Exam 2 88 ## 6 Charlie Exam 2 79 ## 7 Alison Final Exam 81 ## 8 Bob Final Exam 85 ## 9 Charlie Final Exam 92 1.4.2 Spread There are times that we need to convert a “long” dataset into “wide” format. This is exactly the reverse function of the gather. Our example will be to undo the gather step from the previous. Again in Tableau, this is called pivoting, but we’ll make sure that we are turning rows into columns. The tricky part is what variable goes into which pivot field. The top box specifies what the new column headers will be and the bottom box specifies what the cell values will be. 1.4.3 Column Splitting Sometimes we have columns where we actually have two pieces of information stored and we have to split the single column into multiple columns. For example, we might have data about across the country, where the city name obnoxiously includes the state. It would be good to split the Name column into City and State columns. For example, cities &lt;- tribble( ~Name, ~Population, &#39;Phoenix, AZ&#39;, 1660272, &#39;Flagstaff, AZ&#39;, 73964, &#39;Tucson, AZ&#39;, 545975) cities ## # A tibble: 3 x 2 ## Name Population ## &lt;chr&gt; &lt;dbl&gt; ## 1 Phoenix, AZ 1660272 ## 2 Flagstaff, AZ 73964 ## 3 Tucson, AZ 545975 write_csv(cities, &#39;data-raw/cities.csv&#39;) 1.4.4 New Column via Calculation Often we need to take a column and create some sort of calculation. For example, if we are given some information (say student height) in inches, we might want to calculate their height in centimeters by multiplying each height value by \\(2.54\\) and naming the result Height (cm). data &lt;- tribble( ~Grade, ~Gender, ~Height, &#39;1st Grade&#39;, &#39;Male&#39;, 44, &#39;1st Grade&#39;, &#39;Male&#39;, 42, &#39;1st Grade&#39;, &#39;Female&#39;, 42, &#39;1st Grade&#39;, &#39;Female&#39;, 40, &#39;12th Grade&#39;, &#39;Male&#39;, 70, &#39;12th Grade&#39;, &#39;Male&#39;, 68, &#39;12th Grade&#39;, &#39;Male&#39;, 69, &#39;12th Grade&#39;, &#39;Female&#39;, 64, &#39;12th Grade&#39;, &#39;Female&#39;, 65) data %&gt;% mutate(`Height (cm)` = Height *2.54) ## # A tibble: 9 x 4 ## Grade Gender Height `Height (cm)` ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 1st Grade Male 44 112. ## 2 1st Grade Male 42 107. ## 3 1st Grade Female 42 107. ## 4 1st Grade Female 40 102. ## 5 12th Grade Male 70 178. ## 6 12th Grade Male 68 173. ## 7 12th Grade Male 69 175. ## 8 12th Grade Female 64 163. ## 9 12th Grade Female 65 165. write_csv(data, &#39;data-raw/Group_Summarization.csv&#39;) The issue in Tableau is to make sure you remember how to specify a column in a formula. The syntax is [column_name] and then you can use that quantity in whatever formula you want. 1.4.5 Aggregation Given a data set we also want to be able to calculate summary for various columns. For example, we might want to calculate the mean height for each grade level, or perhaps each gender within each grade level. Notice that we end up with a data set with fewer rows. data %&gt;% group_by(Grade, Gender) %&gt;% summarize(`Avg Height` = mean(Height)) ## # A tibble: 4 x 3 ## # Groups: Grade [2] ## Grade Gender `Avg Height` ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 12th Grade Female 64.5 ## 2 12th Grade Male 69 ## 3 1st Grade Female 41 ## 4 1st Grade Male 43 1.4.6 New Column with Aggregation There are many cases where we need to create a calculated column, but the calculation involves some aggregated information. For, if have the number of males and females in each grade and we want to calculate the percentage of males and females in each grade. To do this we need to aggregate data to count the number of students in each grade and then divide the number of males or females in each grade by the total number of students in the grade. data %&gt;% group_by(Grade, Gender) %&gt;% count(name = &#39;Grade_Gender_n&#39;) ## # A tibble: 4 x 3 ## # Groups: Grade, Gender [4] ## Grade Gender Grade_Gender_n ## &lt;chr&gt; &lt;chr&gt; &lt;int&gt; ## 1 12th Grade Female 2 ## 2 12th Grade Male 3 ## 3 1st Grade Female 2 ## 4 1st Grade Male 2 data %&gt;% group_by(Grade, Gender) %&gt;% count(name = &#39;Grade_Gender_n&#39;) %&gt;% group_by(Grade) %&gt;% mutate(Grade_n = sum(Grade_Gender_n)) %&gt;% mutate(Proportion = Grade_Gender_n / Grade_n ) ## # A tibble: 4 x 5 ## # Groups: Grade [2] ## Grade Gender Grade_Gender_n Grade_n Proportion ## &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 12th Grade Female 2 5 0.4 ## 2 12th Grade Male 3 5 0.6 ## 3 1st Grade Female 2 4 0.5 ## 4 1st Grade Male 2 4 0.5 Anytime you need to include an aggregation value in formula, we need to specify any grouping information for calculating the aggregate. The code for this is to specify the grouping variable and the aggregation function and column. The code is: {FIXED [Group]: SUM[Value]} 1.4.7 Unions One way that we could “squish” two data sets together is if they have the same columns and we essentially just want to add new rows to a data set. In this example we have two tables with identical column types and we just want to stack the two tables to create a single table that contains all the rows of data. People &lt;-tribble( ~PersonID, ~First.Name, ~Last.Name, ~Birthday, &#39;P0001&#39;, &#39;Derek&#39;, &#39;Sonderegger&#39;, &#39;01/10/1976&#39;, &#39;P0002&#39;, &#39;Aubrey&#39;,&#39;Sonderegger&#39;, &#39;02/14/1980&#39;, &#39;P0004&#39;, &#39;Casey&#39;, &#39;Sonderegger&#39;, &#39;02/14/2015&#39;) Contacts &lt;- tribble( ~PersonID, ~Type, ~Handle, &#39;P0001&#39;, &#39;email&#39;,&#39;derek.sonderegger@nau.edu&#39;, &#39;P0001&#39;, &#39;Twitter&#39;,&#39;@D_Sonderegger&#39;, &#39;P0002&#39;, &#39;email&#39;, &#39;aubrey.sonderegger@yahoo.com&#39;) New_Contacts &lt;- tribble( ~PersonID, ~Type, ~Handle, &#39;P0003&#39;, &#39;email&#39;, &#39;Elise.Sonderegger@gmail.com&#39;, &#39;P0003&#39;, &#39;Twitter&#39;,&#39;@UnicornsRule&#39;) Contacts ## # A tibble: 3 x 3 ## PersonID Type Handle ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 P0001 email derek.sonderegger@nau.edu ## 2 P0001 Twitter @D_Sonderegger ## 3 P0002 email aubrey.sonderegger@yahoo.com New_Contacts ## # A tibble: 2 x 3 ## PersonID Type Handle ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 P0003 email Elise.Sonderegger@gmail.com ## 2 P0003 Twitter @UnicornsRule write_csv(People, path = &#39;./data-raw/Joins_People.csv&#39;) write_csv(Contacts, path = &#39;./data-raw/Joins_Contacts.csv&#39;) write_csv(New_Contacts, path = &#39;./data-raw/Joins_NewContacts.csv&#39;) bind_rows( Contacts, New_Contacts ) ## # A tibble: 5 x 3 ## PersonID Type Handle ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 P0001 email derek.sonderegger@nau.edu ## 2 P0001 Twitter @D_Sonderegger ## 3 P0002 email aubrey.sonderegger@yahoo.com ## 4 P0003 email Elise.Sonderegger@gmail.com ## 5 P0003 Twitter @UnicornsRule 1.4.8 Joins There are many cases where we have two or more data sets that are related and we need to squish them together to make a table with more columns. For example we might have a data set People that contains a unique numeric code for each person, first and last names, and birth dates. We might also have a data set of Contacts which has the person’s unique numeric code and the contact type and value. People ## # A tibble: 3 x 4 ## PersonID First.Name Last.Name Birthday ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 P0001 Derek Sonderegger 01/10/1976 ## 2 P0002 Aubrey Sonderegger 02/14/1980 ## 3 P0004 Casey Sonderegger 02/14/2015 Contacts ## # A tibble: 3 x 3 ## PersonID Type Handle ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 P0001 email derek.sonderegger@nau.edu ## 2 P0001 Twitter @D_Sonderegger ## 3 P0002 email aubrey.sonderegger@yahoo.com The PersonID column links the two tables. But when we now have to ask what we should do about Casey. There are really two options: Join Type Description Inner Join Only include rows for individuals that have information in both tables. Full Join Include a row for for every row in either of the tables being joined. In this case, it results in a row Casey being included, but the contact information being left empty. # Inner Joining inner_join(People, Contacts) ## # A tibble: 3 x 6 ## PersonID First.Name Last.Name Birthday Type Handle ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 P0001 Derek Sonderegger 01/10/1976 email derek.sonderegger@nau.… ## 2 P0001 Derek Sonderegger 01/10/1976 Twitt… @D_Sonderegger ## 3 P0002 Aubrey Sonderegger 02/14/1980 email aubrey.sonderegger@yah… # Full Join full_join(People, Contacts) ## # A tibble: 4 x 6 ## PersonID First.Name Last.Name Birthday Type Handle ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 P0001 Derek Sonderegger 01/10/1976 email derek.sonderegger@nau.… ## 2 P0001 Derek Sonderegger 01/10/1976 Twitt… @D_Sonderegger ## 3 P0002 Aubrey Sonderegger 02/14/1980 email aubrey.sonderegger@yah… ## 4 P0004 Casey Sonderegger 02/14/2015 &lt;NA&gt; &lt;NA&gt; 1.5 Exercises We are given information about the maximum daily temperature from a weather station in Flagstaff, AZ. The file is available at the GitHub site that this book is hosted on. You can find it https://github.com/dereksonderegger/141/raw/master/data-raw/FlagMaxTemp.csv. This file is in a wide format, where each row represents a month and the columns 1, 2, …, 31 represent the day of the month the observation was made. Convert data set to the long format where the data has only four columns: Year, Month, Day, Tmax. Calculate the average monthly maximum temperature for each Month in the dataset (So there will be 365 mean maximum temperatures). There are several days that have missing data, represented by the value NA. If you have a problem taking the mean with them in there, you likely haven’t converted the temperature from a character string to a numeric value. Convert the average month maximums back to a wide data format where each line represents a year and there are 12 columns of temperature data (one for each month) along with a column for the year. There will be a couple of months that still have missing data because the weather station was out of commission for those months and there was NO data for the entire month. Save this table as a .csv file. A common task is to take a set of data that has multiple categorical variables and create a table of the number of cases for each combination. An introductory statistics textbook contains a dataset summarizing student surveys from several sections of an intro class. The two variables of interest for us are Gender and Year which are the students gender and year in college. Download the dataset as a .csv file from the following website: http://www.lock5stat.com/datasets/StudentSurvey.csv Notice that there are two survey responses that did not give their year in school. Perform a filter step to remove any row with the value of null in the Year column. Produce a data set with eight rows that contains the number of responses for each gender:year combination. Using a pivot command, produce a table of the number of responses in the following form: Gender First Year Sophmore Junior Senior Female Male Save this table as a .csv file. Read Chapter 2 in The Truthful Art. On page 46, figure 2.2 asks you to list aspects of the figure that “seem fishy”. Before reading the rest of the chapter, list the things that seem fishy. After you’ve read the rest of the chapter, go back and examine the graph and reflect on why you didn’t notice certain deceptive issues on the first reading of the graph. On page 55, figure 2.11 asks which chart is more aesthetically pleasing? Which do you think is more attractive and why? "],
["2-graphing-principles.html", "Chapter 2 Graphing Principles 2.1 Elementary Perception Tasks 2.2 Groupings / Gestalt 2.3 “Color” Scales 2.4 Exercises", " Chapter 2 Graphing Principles 2.1 Elementary Perception Tasks Some Visual tasks are easier than others because our visual processing evolved to do certain tasks. From Alberto Cairo’s “The Truthful Art” 2.2 Groupings / Gestalt The way we organize our graphics can lead a viewer to create mental groups of marks. The way we form groupings can be in one of the following ways, (where higher grouping methods produce a stronger grouping effect. Enclosures Connections Proximity Similarity (color/shape) In the following example, find all the fives: If instead, we form a grouping by adding color, then the group of fives stands out prominently. This example was inspired by an example by Alberto Cairo. 2.2.1 Grouping Examples In the following examples, ask yourself what the visual grouping the graph is encouraging? Are the rows or columns grouped? These are taken from a presentation by Todd Iverson and Silas Bergen. Some grouping is stronger than others 2.2.2 Example: Warpbreaks While spinning wool into thread, if the tension on the wool isn’t correctly set, the thread can break. Here we compare two different types of wool at three different tensions. 2.3 “Color” Scales Defining Color really has three different attributes (From Wikipedia). 2.3.0.1 HSV Scale Hue: The attribute of a visual sensation according to which an area appears to be similar to one of the perceived colors: red, yellow, green, and blue, or to a combination of two of them. Saturation: The “colorfulness of a stimulus relative to its own brightness” Value: The “brightness relative to the brightness of a similarly illuminated white” HSV Cylinder from Wikipedia Hue is appropriate for categorical variables. Saturation and/or Value is appropriate for a quantitative variable scale. Neither R nor Tableau make it particularly easy to map these aspects, so we won’t get too deep into it. 2.4 Exercises In soccer, Kylian Mbappé is being referred to as the next world dominating player. The graphic below compares Mbappé to soccer greats Cristiano Ronaldo and Lionel Messi. Below is a graph showing the number of goals scored during various parts of their career (first 100 professional games, second 100, etc). Mbappé vs Messi and Ronaldo Identify the EPT the reader is required to perform and the grouping structures used. Comment on how the grouping was effective or if you think some change might be better. In NBA basketball, shot accuracy and distance from the net is important. In the following graph, we can investigate how often shots are taken from different distances. Shot distribution in the NBA Identify the EPT the reader is required to perform and the grouping structures used. Comment on how the grouping was effective or if you think some change might be better. The following graphic calculates difference between a month’s temperature compared to the monthly average temperature across the years since 1850. For example, this graph compares the average January 2014 temperature to the average January temperature across the last 170 Januaries.) Average World Temperature Since 1850 Identify the EPT the reader is required to perform and the grouping structures used. Comment on how the grouping was effective or if you think some change might be better. Find a graphic “in the wild” that you think is interesting. Turn in both the original graphic as well as your answers to the following: Identify the EPT the reader is required to perform and the grouping structures used. Comment on how the graph was effective or if you think some change might improve the graph. "],
["3-amounts.html", "Chapter 3 Amounts 3.1 Introduction 3.2 Example 1 3.3 Example 2 3.4 Tableau Toolbox 3.5 Example 3 3.6 Exercises", " Chapter 3 Amounts 3.1 Introduction This chapter focuses on displaying a single numerical variable versus one or more categorical variables. To display the quantitative variable, we’ll try to stay at the top of the EPT tasks and the quantitative variable will be quantified with either the x or y axis or using length. The exception to this is the heatmap, where the quantitative variable is encoded by the color of the tile. 3.2 Example 1 The 2020 presidential candidate field has a wide range of ages. The New York Times has a nice article showing the candidate ages. I grabbed a few of the most prominent candidates and pulled their birthdays from Wikipedia and then calculated their age on election day. As usual the data is available on the Github pages for this book. The order of the candidates is useless. Here we have ordered them alphabetically when we should try to think about an ordering that improves clarity. Lets switch to sorting the candidates by age. This isn’t too bad, but it fails to visually impress the differences. A bar chart should visually impress the ages based on the length of the bar so that we don’t have to keep looking at the Age axis. What would be dishonest is if we were to chop off the bars at 35 or 40 to make the age difference between Buttigieg and Warren, Trump, Biden and Sanders seem huge. 3.3 Example 2 In this section we’ll consider two categories. We have the results from a survey administered to students in an introductory statistics class at a New York university. We’ll compare the number of student responses broken down by year in school and gender. The first thing I notice is that there is approximate gender equality, but there are a few more males in class. After a more detailed look, I see that the most abundant class is sophomores, followed by first years, and juniors and seniors are approximately equally abundant. If we switch the grouping order and use color to denote gender and columns to denote the classes, the abundance of sophomores is the first insight to be noticed. 3.4 Tableau Toolbox 3.5 Example 3 Often we need to graph some value and want to know how it varies among two different categories. In these cases, we have to employ some sort of grouping strategy. The bar chart here is obscuring the differences in life expectancies because the numbers are so close. In this case, I think points make more sense. Also I want to see how life expectancy has changed since World War II. In the above graph, I am grouping countries both by enclosure and with a physical path connection. The reader tends to see the line as a whole object and compare the line max/min and slope among the seven countries. We might consider changing the faceting to stack the countries, but this makes it much harder to compare countries to see which has a higher life expectancy. We could have also used color to indicate which country is which, but this produces a bit of a spaghetti plot and is difficult to interpret. However, it is easier to identify when Japan’s life expectancy surpaced the rest of the G7 countries. A heat map makes it easier to see which country has the highest life expectancy, but we lose precision in the actual values. 3.6 Exercises "],
["4-proportions.html", "Chapter 4 Proportions 4.1 Single Set 4.2 Multiple Sets of Proportions 4.3 Exercises", " Chapter 4 Proportions Conceptually graphing proportions is the same as graph raw values, but sum to 100%. This seemingly small difference means that our graphic can imply that our categories contain ALL possible categories. 4.1 Single Set 4.1.1 Pie Charts As typical, with a just a few categories, we should move the labels onto the graph and just annotate the graph. Also, we’ll order the categories from the most temporary employees (Graduate Teaching Assistants) to most permanent (Professors) 4.1.2 Stacked Bar 4.1.3 Side-by-side Barchart Pie chart Stacked bars Side-by-side bars Clear that data is proportions of a whole Yes Yes no Precise visual comparison of values no no Yes Visually appealing even in simple comparisons Yes no Yes Extendable to nested or multiple distributions or time series no Yes no 4.2 Multiple Sets of Proportions 4.2.1 Faceted Bar charts 4.2.2 Side-by-Side Stacked Barcharts 4.2.3 Mosiac plots Sort like side-by-side stacked bar charts, but now we allow the column width to vary as well. The area is proportional the groups representation in the whole data. This reduces the number of really thin bands because we can make the column narrower as well. 4.2.4 Alluvial Plots If we want to compare multiple categorical variables, another option is alluvial plots. I find that alluvial plots work better for events that have a definate chronological order and there is less stream overlaps.. Here is an example from a Washington Post story about people graphing their online dating interactions. These are the results of 6.5 weeks of online dating by a 37 year old woman. 4.2.5 Tree graphs In mosaic plots, we had crossed variables where every category level of one factor could show up with all levels of another factor. Crossed Factors Suitable for a Mosaic Plot. Factor.1 Factor.2 value A w 4 A x 6 B w 15 B x 25 Another possibility is that the variables are nested such that a category level of the second factor only ever occurs within a single level of the first factor. Nested Factors Suitable for a Tree Map. Factor.1 Factor.2 value A w 4 A x 6 B y 15 B z 25 When we have a hierarchical structure of categories, then mosaic plots aren’t quite right. Instead we’ll hierarchically subdivide the graph area up. The graph first separates the graph into continents and scales the area of each continent by the population of the continent. Then each continent is split into the countries that compose the continent, again with area representing population. Finally the countries are color-coded by their 2007 life expectancy. This differs from a moasic plot in that a country only occurs withing one continent whereas in a mosaic plot, a category level will occur in multiple “containers”. 4.3 Exercises Alluvial plots are a particular type of Sankey graphs which show flow rates and amounts and have been around for quite some time. In 1869, Charles Minard created a graphic that details the size of Napaleon’s army as they marched on Russia and subsequently returned. You can find the original or the modern English translation on Wikipedia. How many men did the army start marching with? How many men arrived in Moscow? How many men died crossing the Berezina River on the return trip? (approximately from the map information provided) How cold was it when they cross the Berezina River on the retern trip? Read Chapter 10 and 11 in Claus Wilke’s Fundamentals of Data Visualiztion book. In chapter 10 he presents several different graphics that visualize the bridge construction era, bridge material, and which river they cross for bridges near Pittsburgh, Pennsylvania. Discuss three of them and explain which graph you prefer and why. Download data about the Titanic disaster at the GitHub site for this class. Save the file as a Titanic.csv and open it in Tableau. In Tableau, a faceted stacked barchart just as we did in these notes. In a new worksheet, copy your faceted stacked barchart and then turn it into faceted pie charts. Comment on which you prefer and why. Finally create a mosaic plot of the Titantic dataset. "],
["5-distributions.html", "Chapter 5 Distributions", " Chapter 5 Distributions "],
["6-x-y-relationships.html", "Chapter 6 X-Y Relationships", " Chapter 6 X-Y Relationships "],
["7-geographic.html", "Chapter 7 Geographic", " Chapter 7 Geographic "]
]
